package com.xelitexirish.malwareshield.preference;

import android.content.Context;
import android.content.SharedPreferences;
import android.preference.PreferenceManager;

import com.xelitexirish.malwareshield.util.Constants;

public class Prefs {

    public static boolean doUpdateCheck(Context context){
        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(context);
        return preferences.getBoolean("DO_AUTO_UPDATE_CHECK", true);
    }

    public static boolean doAutomaticUpdateDaily(Context context){
        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(context);
        return preferences.getBoolean("DO_AUTO_UPDATE_DAILY", true);
    }

    public static boolean doAdBlockLists(Context context){
        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(context);
        return preferences.getBoolean("ENABLE_ADBLOCK_LISTS", true);
    }

    public static boolean doHostsFileLists(Context context){
        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(context);
        return preferences.getBoolean("ENABLE_HOSTSFILE_LISTS", true);
    }

    public static boolean doNormalBlockedWebsites(Context context){
        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(context);
        return preferences.getBoolean("ENABLE_BLOCKED_LISTS", true);
    }

    public static String getApplyMethod(Context context) {
        SharedPreferences prefs = context.getSharedPreferences(Constants.PREFEREBCES_NAME, Context.MODE_PRIVATE);
        return prefs.getString("applyMethod", "writeToSystem");
    }

    public static String getCustomTarget(Context context) {
        SharedPreferences prefs = context.getSharedPreferences(Constants.PREFEREBCES_NAME, Context.MODE_PRIVATE);
        return prefs.getString("customTarget", "/data/etc/hosts");
    }

    public static String getRedirectionIp(Context context){
        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(context);
        return preferences.getString("HOSTS_REDIRECTION_IP", Constants.REDIRECTION_IP_DEFAULT);
    }
}
